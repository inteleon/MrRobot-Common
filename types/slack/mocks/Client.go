// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import slack "github.com/nlopes/slack"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// GetChannelInfoContext provides a mock function with given fields: _a0, _a1
func (_m *Client) GetChannelInfoContext(_a0 context.Context, _a1 string) (*slack.Channel, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *slack.Channel
	if rf, ok := ret.Get(0).(func(context.Context, string) *slack.Channel); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*slack.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChannelsContext provides a mock function with given fields: _a0, _a1
func (_m *Client) GetChannelsContext(_a0 context.Context, _a1 bool) ([]slack.Channel, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []slack.Channel
	if rf, ok := ret.Get(0).(func(context.Context, bool) []slack.Channel); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]slack.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, bool) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConversationInfoContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *Client) GetConversationInfoContext(_a0 context.Context, _a1 string, _a2 bool) (*slack.Channel, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *slack.Channel
	if rf, ok := ret.Get(0).(func(context.Context, string, bool) *slack.Channel); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*slack.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, bool) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserByEmail provides a mock function with given fields: _a0
func (_m *Client) GetUserByEmail(_a0 string) (*slack.User, error) {
	ret := _m.Called(_a0)

	var r0 *slack.User
	if rf, ok := ret.Get(0).(func(string) *slack.User); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*slack.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserIdentityContext provides a mock function with given fields: _a0
func (_m *Client) GetUserIdentityContext(_a0 context.Context) (*slack.UserIdentityResponse, error) {
	ret := _m.Called(_a0)

	var r0 *slack.UserIdentityResponse
	if rf, ok := ret.Get(0).(func(context.Context) *slack.UserIdentityResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*slack.UserIdentityResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserProfileContext provides a mock function with given fields: _a0, _a1
func (_m *Client) GetUserProfileContext(_a0 string, _a1 bool) (*slack.UserProfile, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *slack.UserProfile
	if rf, ok := ret.Get(0).(func(string, bool) *slack.UserProfile); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*slack.UserProfile)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, bool) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OpenIMChannel provides a mock function with given fields: _a0
func (_m *Client) OpenIMChannel(_a0 string) (bool, bool, string, error) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 string
	if rf, ok := ret.Get(2).(func(string) string); ok {
		r2 = rf(_a0)
	} else {
		r2 = ret.Get(2).(string)
	}

	var r3 error
	if rf, ok := ret.Get(3).(func(string) error); ok {
		r3 = rf(_a0)
	} else {
		r3 = ret.Error(3)
	}

	return r0, r1, r2, r3
}

// PostMessageContext provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *Client) PostMessageContext(_a0 context.Context, _a1 string, _a2 string, _a3 slack.PostMessageParameters) (string, string, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string, slack.PostMessageParameters) string); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(context.Context, string, string, slack.PostMessageParameters) string); ok {
		r1 = rf(_a0, _a1, _a2, _a3)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string, string, slack.PostMessageParameters) error); ok {
		r2 = rf(_a0, _a1, _a2, _a3)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// SetDebug provides a mock function with given fields: _a0
func (_m *Client) SetDebug(_a0 bool) {
	_m.Called(_a0)
}
